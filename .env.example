APP_NAME="پیشخوانک"
APP_ENV=local
APP_KEY=
APP_DEBUG=false
APP_URL=https://pishkhanak.com
API_URL=https://pishkhanak.com/api
APP_IMAGES_URL=https://pishkhanak.com/storage
APP_LOCALE=fa
TELESCOPE_ENABLED=false

# Encryption key for sensitive data - Generate with: php artisan key:generate
ENC_KEY=

LOG_CHANNEL=stack

# Database Configuration - Use strong passwords!
DB_CONNECTION=pgsql
DB_HOST=127.0.0.1
DB_DATABASE=your_database_name
DB_USERNAME=your_database_user
DB_PASSWORD="USE_STRONG_PASSWORD_HERE"

MAIN_ADMIN_EMAIL=admin@example.com

# Telegram Bot Configuration (REQUIRED - Must be configured!)
TELEGRAM_BOT_TOKEN=
TELEGRAM_BOT_USERNAME=
TELEGRAM_CHANNEL_ID=
TELEGRAM_WEBHOOK_SECRET=
TELEGRAM_ADMIN_CHAT_IDS=

# Cache and Queue Configuration
CACHE_DRIVER=redis
CACHE_STORE=redis
QUEUE_CONNECTION=redis
SESSION_DRIVER=redis
SESSION_LIFETIME=120

# Redis Configuration - ALWAYS use password in production!
REDIS_HOST=127.0.0.1
REDIS_PASSWORD="GENERATE_STRONG_REDIS_PASSWORD"
REDIS_PORT=6379
REDIS_CLIENT=predis
REDIS_PREFIX=pishkhanak_database_

# Mail Configuration
MAIL_DRIVER=smtp
MAIL_HOST=smtp.mailtrap.io
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null

# Pusher Configuration (if needed)
PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_APP_CLUSTER=mt1

MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

# Google OAuth - Get from https://console.cloud.google.com/
GOOGLE_CLIENT_ID="your_google_client_id"
GOOGLE_CLIENT_SECRET="your_google_client_secret"
GOOGLE_REDIRECT_URI="/oauth/callback/google"

# WebSocket Configuration
BROADCAST_DRIVER=reverb
BROADCAST_CONNECTION=reverb
REVERB_APP_ID=
REVERB_APP_KEY=
REVERB_APP_SECRET=
REVERB_HOST="localhost"
REVERB_PORT=9000
REVERB_SCHEME=http

VITE_REVERB_APP_KEY="${REVERB_APP_KEY}"
VITE_REVERB_HOST="reverb.pishkhanak.com"
VITE_REVERB_PORT=443
VITE_REVERB_SCHEME=https

# Server Configuration
SERVER_IP6=
SERVER_IP4=

# =====================================================
# Payment Gateway Configuration
# =====================================================

# Jibit Payment Gateway - Contact Jibit for credentials
JIBIT_API_KEY="contact_jibit_for_api_key"
JIBIT_SECRET_KEY="contact_jibit_for_secret_key"
JIBIT_BASE_URL=https://napi.jibit.ir/ide

# Jibit PPG (Payment Gateway) Configuration
JIBIT_PPG_API_KEY="contact_jibit_for_ppg_api_key"
JIBIT_PPG_API_SECRET="contact_jibit_for_ppg_api_secret"
JIBIT_PPG_WEBHOOK_SECRET=""
JIBIT_PPG_SANDBOX=true

# Sepehr Payment Gateway
SEPEHR_TERMINAL_ID=
SEPEHR_SANDBOX=true
SEPEHR_GET_METHOD=false  
SEPEHR_ROLLBACK_ENABLED=false

# Finnotech API - Contact Finnotech for credentials
FINNOTECH_BASE_URL=https://apibeta.finnotech.ir
FINNOTECH_CLIENT_ID="your_finnotech_client_id"
FINNOTECH_CLIENT_SECRET="contact_finnotech_for_secret"
FINNOTECH_SMS_SENDER=

# =====================================================
# AI Service Configuration - Keep these secure!
# =====================================================

# OpenRouter API - Get from https://openrouter.ai/
OPENROUTER_API_KEY="sk-or-v1-your_openrouter_api_key"

# OpenAI API - Get from https://platform.openai.com/
OPENAI_API_KEY="sk-your_openai_api_key"

# Google Gemini API - Get from https://makersuite.google.com/app/apikey
GEMINI_API_KEY1="your_gemini_api_key_1"
GEMINI_API_KEY2="your_gemini_api_key_2"
GEMINI_API_KEY3="your_gemini_api_key_3"

# =====================================================
# SEP (Saman Electronic Payment) Gateway Configuration
# =====================================================

# Terminal ID - 8-digit unique identifier provided by SEP
SEP_TERMINAL_ID=

# Sandbox Mode - Enable/disable test environment
SEP_SANDBOX=true

# Token Expiry - Token validity period in minutes
SEP_TOKEN_EXPIRY=20

# Refund Service - Enable/disable refund functionality
SEP_REFUND_ENABLED=false

# Token refresh memory settings
SCHEDULED_TASK_MEMORY_LIMIT=2G

# General PHP Memory Settings
PHP_MEMORY_LIMIT=4G

# =====================================================
# Vertex AI Configuration
# =====================================================

GOOGLE_CLOUD_PROJECT_ID=your_project_id
VERTEX_AI_LOCATION=europe-west4
GOOGLE_APPLICATION_CREDENTIALS=/path/to/vertex-ai-credentials.json

# Vertex AI Proxy Configuration
VERTEX_AI_PROXY_ENABLED=false
VERTEX_AI_PROXY_URL=socks5://127.0.0.1:1080

# Imagen Model Selection
IMAGEN_MODEL=imagen-4.0-ultra-generate-001

# =====================================================
# Telegram Bot Configuration - Keep token secure!
# =====================================================

TELEGRAM_BOT_TOKEN="your_telegram_bot_token"
TELEGRAM_BOT_USERNAME=your_bot_username
TELEGRAM_CHANNEL_ID=

# Telegram Proxy Settings
TELEGRAM_PROXY_ENABLED=false
TELEGRAM_PROXY_TYPE=socks5
TELEGRAM_PROXY_HOST=127.0.0.1
TELEGRAM_PROXY_PORT=1091

# Telegram Admin Chat IDs (comma-separated)
TELEGRAM_ADMIN_CHAT_IDS=

# =====================================================
# IMPORTANT SECURITY NOTES:
# =====================================================
# 1. NEVER commit this file with real credentials
# 2. Generate strong passwords for all services
# 3. Rotate API keys regularly
# 4. Use different credentials for dev/staging/production
# 5. Enable 2FA where possible on service accounts
# 6. Monitor API usage for suspicious activity
# 7. Use secrets management tools in production
# =====================================================